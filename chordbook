#!/usr/bin/sh
# ==  CHORDBOOK  ======================================
# Description: 
#    Creates a PDF lead sheet from ChordPro source file
# Author: chris4727
# Dependancies:
#   - ChordPro

vars() {
  input_file="$1"
  filename=${1%%.*}
  red="\033[0;31m"
  blu="\033[0;34m"
  grn="\033[0;32m"
  prp="\033[0;35m"
  nc="\033[0m" # No Color
}

echo_vars() {
  printf "$input_file\n"
  printf "$filename\n"
}

check_args() {
  if [ $# -ne 1 ]; then
    printf "${red}Error:${nc} This script expects one file as anargument.\n"
    printf "${grn}Usage:${nc} 'chordbook input.cho'\n"
    exit 1
  fi
}

createpdf() {
  chordpro --config="$HOME"/dotfiles/chordpro/.config/chordpro/default.json "$input_file" -o "$filename".pdf
  chordpro --config="$HOME"/.config/chordpro/default.json --diagrams=user "$input_file" -o ./output/"$filename".pdf
  # specifies default.json config filename
  # Only prints user defined chord diagrams
  # Takes specified input file and outputs to pdf of the same name
  # Other options:
  # See https://www.chordpro.org/chordpro/using-chordpro/#diagrams
  # --transcode=nashville # Transcode to Nashville number chords
  # --transpose=+2        # Transpose up 2 semitones (- for down)
  # --decapo              # Remove capo and transpose chords
  # --filelist=FILE       # Specify txt file with list of input files
}

main() {
  vars "$@"
  #echo_vars
  check_args "$@"
  printf "${blu}-->${nc} Creating pdf from ${prp}$input_file${nc}\n"
  createpdf
  printf "${grn}==>${nc} Created ${grn}$filename.pdf${nc}\n"
}

main "$@"

